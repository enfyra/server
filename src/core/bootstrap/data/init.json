{
    "role_definition": {
        "name": "Admin"
    },
    "user_definition": {
        "email": "enfyra@admin.com",
        "password": "1234",
        "isRootAdmin": true,
        "isSystem":true
    },
    "setting_definition": {
        "isInit": false,
        "isSystem":true,
        "projectName": "Enfyra CMS",
        "projectDescription": "Description for Enfyra CMS"
    },
    "method_definition": [
        {
            "method": "GQL_QUERY",
            "isSystem":true
        },
        {
            "method": "GQL_MUTATION",
            "isSystem":true
        },
        {
            "method": "GET",
            "isSystem":true
        },
        {
            "method": "POST",
            "isSystem":true
        },
        {
            "method": "PATCH",
            "isSystem":true
        },
        {
            "method": "DELETE",
            "isSystem":true
        }
        
    ],
    "route_definition": [
        {
            "path": "/route_definition",
            "mainTable": "route_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon": "lucide:git-branch",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/table_definition",
            "mainTable": "table_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon": "lucide:table",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/user_definition",
            "mainTable": "user_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon": "lucide:user"
        },
        {
            "path": "/setting_definition",
            "mainTable": "setting_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon": "lucide:settings",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/role_definition",
            "mainTable": "role_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:shield-check"
        },
        {
            "path": "/auth/login",
            "mainTable": "user_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
         {
            "path": "/auth/logout",
            "mainTable": "user_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
         {
            "path": "/auth/refresh-token",
            "mainTable": "user_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/me",
            "mainTable": "user_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/method_definition",
            "mainTable": "method_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/hook_definition",
            "mainTable": "hook_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/route_handler_definition",
            "mainTable": "route_handler_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/route_permission_definition",
            "mainTable": "route_permission_definition",
            "isEnabled": true,
            "isSystem":true,
            "icon":"lucide:route"
        },
        {
            "path": "/menu_definition",
            "mainTable": "menu_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:menu",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/extension_definition",
            "mainTable": "extension_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:puzzle",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/folder_definition",
            "mainTable": "folder_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:folder"
        },
        {
            "path": "/folder_definition/tree",
            "mainTable": "folder_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:folder-tree"
        },
        {
            "path": "/file_definition",
            "mainTable": "file_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:file"
        },
        {
            "path": "/file_permission_definition",
            "mainTable": "file_permission_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:file"
        },
        {
            "path": "/assets/:id",
            "mainTable": "file_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:download",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/package_definition",
            "mainTable": "package_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:package"
        },
        {
            "path": "/bootstrap_script_definition",
            "mainTable": "bootstrap_script_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:play"
        },
        {
            "path": "/api-docs",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:book-open",
            "description": "Swagger API Documentation",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/ai_tool_definition",
            "mainTable": "ai_tool_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:bot",
            "publishedMethods": ["GET"]
        },
        {
            "path": "/ai_tool_helper_definition",
            "mainTable": "ai_tool_helper_definition",
            "isEnabled": true,
            "isSystem": true,
            "icon": "lucide:book-text",
            "publishedMethods": ["GET"]
        }
    ], 
    "hook_definition": [
        {
            "isEnabled": true,
            "afterHook": "@DATA = { statusCode: @STATUS, ...@DATA, message: 'Success'}",
            "name": "Default response",
            "isSystem":false
        },
        {
            "isEnabled": true,
            "preHook": "if (@BODY.password) { @BODY.password = await @HELPERS.$bcrypt.hash(@BODY.password); }",
            "name": "User definition hash password",
            "isSystem":true,
            "route": "/user_definition",
            "methods": ["POST", "PATCH"]
        },
        {
            "isEnabled": true,
            "preHook": "if (@BODY.name) { @BODY.slug = await @HELPERS.autoSlug(@BODY.name); }",
            "name": "Folder definition auto slug",
            "isSystem": true,
            "route": "/folder_definition",
            "methods": ["POST", "PATCH"]
        }
    ],
    "menu_definition": [
        {
            "type": "Mini Sidebar",
            "label": "Dashboard",
            "icon": "lucide:layout-dashboard",
            "path": "/dashboard",
            "isEnabled": true,
            "isSystem": true,
            "description": "Main dashboard",
            "order": 1,
            "permission": {
                "allowAll": true
            }
        },
        {
            "type": "Mini Sidebar",
            "label": "Data",
            "icon": "lucide:list",
            "path": "/data",
            "isEnabled": true,
            "isSystem": true,
            "description": "Data management",
            "order": 2,
            "permission": {
                "allowAll": true
            }
        },
        {
            "type": "Mini Sidebar",
            "label": "Collections",
            "icon": "lucide:database",
            "path": "/collections",
            "isEnabled": true,
            "isSystem": true,
            "description": "Table collections management",
            "order": 3,
            "permission": {
                "or": [
                    {
                        "route": "/table_definition",
                        "actions": ["create"]
                    },
                    {
                        "route": "/table_definition",
                        "actions": ["update"]
                    },
                    {
                        "route": "/table_definition",
                        "actions": ["delete"]
                    }
                ]
            }
        },
        {
            "type": "Mini Sidebar",
            "label": "Settings",
            "icon": "lucide:settings",
            "path": "/settings",
            "isEnabled": true,
            "isSystem": true,
            "description": "System settings",
            "order": 4,
            "permission": {
                "allowAll": true
            }
        },
        {
            "type": "Menu",
            "label": "General",
            "icon": "heroicons:cog-8-tooth",
            "path": "/settings/general",
            "isEnabled": true,
            "isSystem": true,
            "description": "General settings",
            "order": 1,
            "sidebar": "Settings",
            "permission": {
                "or": [{ "route": "/setting_definition", "actions": ["read", "update"] }]
            }
        },
        {
            "type": "Menu",
            "label": "Menu",
            "icon": "heroicons:bars-3",
            "path": "/settings/menus",
            "isEnabled": true,
            "isSystem": true,
            "description": "Menu management",
            "order": 2,
            "sidebar": "Settings",
            "permission": {
                "or": [
                    { "route": "/menu_definition", "actions": ["read"] },
                    { "route": "/menu_definition", "actions": ["create"] },
                    { "route": "/menu_definition", "actions": ["update"] },
                    { "route": "/menu_definition", "actions": ["delete"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Extensions",
            "icon": "heroicons:puzzle-piece",
            "path": "/settings/extensions",
            "isEnabled": true,
            "isSystem": true,
            "description": "Extension management",
            "order": 3,
            "sidebar": "Settings",
            "permission": {
                "and": [
                    { "route": "/extension_definition", "actions": ["read"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Routings",
            "icon": "heroicons:map",
            "path": "/settings/routings",
            "isEnabled": true,
            "isSystem": true,
            "description": "Route management",
            "order": 4,
            "sidebar": "Settings",
            "permission": {
                "and": [
                    { "route": "/route_definition", "actions": ["read"] },
                    {
                        "or": [
                            { "route": "/route_definition", "actions": ["create"] },
                            { "route": "/route_definition", "actions": ["update"] },
                            { "route": "/route_definition", "actions": ["delete"] }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Handlers",
            "icon": "heroicons:command-line",
            "path": "/settings/handlers",
            "isEnabled": true,
            "isSystem": true,
            "description": "Route handler management",
            "order": 5,
            "sidebar": "Settings",
            "permission": {
                "or": [{ "route": "/route_handler_definition", "actions": ["read"] }]
            }
        },
        {
            "type": "Menu",
            "label": "Hooks",
            "icon": "heroicons:link",
            "path": "/settings/hooks",
            "isEnabled": true,
            "isSystem": true,
            "description": "Hook management",
            "order": 6,
            "sidebar": "Settings",
            "permission": {
                "or": [{ "route": "/hook_definition", "actions": ["read"] }]
            }
        },
        {
            "type": "Menu",
            "label": "Bootstrap Scripts",
            "icon": "heroicons:play",
            "path": "/settings/bootstrap",
            "isEnabled": true,
            "isSystem": true,
            "description": "Bootstrap script management",
            "order": 7,
            "sidebar": "Settings",
            "permission": {
                "or": [{ "route": "/bootstrap_script_definition", "actions": ["read"] }]
            }
        },
        {
            "type": "Dropdown Menu",
            "label": "Packages",
            "icon": "lucide:package",
            "path": "/settings/packages",
            "isEnabled": true,
            "isSystem": true,
            "description": "Packages management",
            "order": 8,
            "sidebar": "Settings",
            "permission": {
                "or": [
                    { "route": "/package_definition", "actions": ["read"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Users",
            "icon": "heroicons:users",
            "path": "/settings/users",
            "isEnabled": true,
            "isSystem": true,
            "description": "User management",
            "order": 9,
            "sidebar": "Settings",
            "permission": {
                "and": [
                    { "route": "/user_definition", "actions": ["read"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Roles",
            "icon": "heroicons:shield-check",
            "path": "/settings/roles",
            "isEnabled": true,
            "isSystem": true,
            "description": "Role management",
            "order": 10,
            "sidebar": "Settings",
            "permission": {
                "and": [
                    { "route": "/role_definition", "actions": ["read"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Create New Table",
            "icon": "lucide:plus",
            "path": "/collections/create",
            "isEnabled": true,
            "isSystem": true,
            "description": "Create new table",
            "order": 0,
            "sidebar": "Collections",
            "permission": {
                "or": [{ "route": "/table_definition", "actions": ["create"] }]
            }
        },
        {
            "type": "Mini Sidebar",
            "label": "Files",
            "icon": "lucide:folder",
            "path": "/files",
            "isEnabled": true,
            "isSystem": true,
            "description": "File & folder management",
            "order": 5,
            "permission": {
                "or": [
                    { "route": "/file_definition", "actions": ["read"] }
                ]
            }
        },
        
        {
            "type": "Menu",
            "label": "Files management",
            "icon": "lucide:folder-tree",
            "path": "/files/management",
            "isEnabled": true,
            "isSystem": true,
            "description": "Files management",
            "order": 1,
            "sidebar": "Files",
            "permission": {
                "or": [
                    { "route": "/file_definition", "actions": ["read"] }
                ]
            }
        },
        {
            "type": "Menu",
            "label": "Install Package",
            "icon": "lucide:plus",
            "path": "/settings/packages/install",
            "isEnabled": true,
            "isSystem": true,
            "description": "Install Package",
            "order": 1,
            "parent": "Packages"
        },
        {
            "type": "Menu",
            "label": "App Packages",
            "icon": "lucide:package-2",
            "path": "/settings/packages/app",
            "isEnabled": true,
            "isSystem": true,
            "description": "App packages management",
            "order": 2,
            "parent": "Packages"
        },
        {
            "type": "Menu",
            "label": "Backend Packages",
            "icon": "lucide:box",
            "path": "/settings/packages/backend",
            "isEnabled": true,
            "isSystem": true,
            "description": "Backend packages management",
            "order": 3,
            "parent": "Packages"
        }
    ],
    "ai_tool_helper_definition": [
        {
            "topic": "query_operators",
            "category": "syntax",
            "summary": "Available filter operators: _eq, _neq, _gt, _gte, _lt, _lte, _in, _not_in, _contains, _starts_with, _ends_with, _between, _is_null, _is_not_null",
            "content": {
                "operators": [
                    {"name": "_eq", "description": "Equal to", "example": "?filter[status][_eq]=active"},
                    {"name": "_neq", "description": "Not equal", "example": "?filter[status][_neq]=deleted"},
                    {"name": "_gt", "description": "Greater than", "example": "?filter[price][_gt]=1000"},
                    {"name": "_gte", "description": "Greater than or equal", "example": "?filter[age][_gte]=18"},
                    {"name": "_lt", "description": "Less than", "example": "?filter[stock][_lt]=10"},
                    {"name": "_lte", "description": "Less than or equal", "example": "?filter[discount][_lte]=50"},
                    {"name": "_in", "description": "Value in array", "example": "?filter[status][_in]=active,pending"},
                    {"name": "_not_in", "description": "Value not in array", "example": "?filter[role][_not_in]=admin,superadmin"},
                    {"name": "_contains", "description": "String contains (case-insensitive)", "example": "?filter[name][_contains]=john"},
                    {"name": "_starts_with", "description": "String starts with", "example": "?filter[email][_starts_with]=admin"},
                    {"name": "_ends_with", "description": "String ends with", "example": "?filter[email][_ends_with]=@company.com"},
                    {"name": "_between", "description": "Value between range", "example": "?filter[created_at][_between]=2024-01-01,2024-12-31"},
                    {"name": "_is_null", "description": "Field is null", "example": "?filter[deleted_at][_is_null]=true"},
                    {"name": "_is_not_null", "description": "Field is not null", "example": "?filter[email][_is_not_null]=true"}
                ],
                "logical_operators": [
                    {"name": "_and", "description": "AND condition", "note": "Multiple filters at same level are automatically ANDed"},
                    {"name": "_or", "description": "OR condition", "example": "?filter[_or][0][status][_eq]=active&filter[_or][1][status][_eq]=pending"},
                    {"name": "_not", "description": "NOT condition", "example": "?filter[_not][status][_eq]=deleted"}
                ]
            },
            "examples": [
                {"query": "GET /users?filter[status][_eq]=active", "description": "Get active users"},
                {"query": "GET /orders?filter[total][_gt]=1000000", "description": "Get orders > 1M"},
                {"query": "GET /users?filter[email][_contains]=gmail", "description": "Find Gmail users"}
            ],
            "isEnabled": true,
            "isSystem": true
        },
        {
            "topic": "field_selection",
            "category": "syntax",
            "summary": "Use fields parameter to select specific columns. Supports dot notation for relations (e.g., user.email, profile.*)",
            "content": {
                "patterns": [
                    {"pattern": "*", "description": "Select all scalar columns from main table", "example": "GET /users?fields=*"},
                    {"pattern": "column1,column2", "description": "Select specific columns", "example": "GET /users?fields=id,name,email"},
                    {"pattern": "relation.*", "description": "Select all columns from relation", "example": "GET /orders?fields=id,total,customer.*"},
                    {"pattern": "relation.column", "description": "Select specific relation column", "example": "GET /orders?fields=id,customer.name,customer.email"},
                    {"pattern": "relation.nested.*", "description": "Deep nested relations", "example": "GET /orders?fields=id,customer.profile.*,items.product.name"}
                ],
                "auto_join": "Enfyra automatically joins tables when you reference relations in fields or filters"
            },
            "examples": [
                {"query": "GET /users?fields=id,name,email", "description": "Get only id, name, email"},
                {"query": "GET /orders?fields=*,customer.name,customer.email", "description": "Get all order fields + customer name & email"},
                {"query": "GET /posts?fields=id,title,author.*,comments.*", "description": "Get post with full author and comments"}
            ],
            "isEnabled": true,
            "isSystem": true
        },
        {
            "topic": "relation_filters",
            "category": "syntax",
            "summary": "Filter main table by related table fields using dot notation",
            "content": {
                "syntax": "filter[relation][field][operator]=value",
                "examples_explained": [
                    {"pattern": "filter[customer][email][_eq]=john@mail.com", "description": "Filter by related table field"},
                    {"pattern": "filter[customer][profile][city][_eq]=Hanoi", "description": "Filter by deeply nested relation"},
                    {"pattern": "filter[items][product][category][_eq]=Electronics", "description": "Filter through multiple relations"}
                ]
            },
            "examples": [
                {"query": "GET /orders?filter[customer][email][_eq]=john@mail.com", "description": "Get orders of customer with email"},
                {"query": "GET /orders?filter[customer][location][_eq]=Hanoi&filter[total][_gt]=1000000", "description": "Orders from Hanoi > 1M"},
                {"query": "GET /posts?filter[author][role][_eq]=admin", "description": "Posts by admin authors"}
            ],
            "isEnabled": true,
            "isSystem": true
        },
        {
            "topic": "sorting",
            "category": "syntax",
            "summary": "Sort results using sort parameter. Prefix with - for descending order",
            "content": {
                "patterns": [
                    {"pattern": "sort=field", "description": "Sort ascending", "example": "sort=created_at"},
                    {"pattern": "sort=-field", "description": "Sort descending (with minus)", "example": "sort=-created_at"},
                    {"pattern": "sort=field1,-field2", "description": "Multiple sort", "example": "sort=status,-created_at"},
                    {"pattern": "sort=relation.field", "description": "Sort by relation field", "example": "sort=-user.name"}
                ]
            },
            "examples": [
                {"query": "GET /users?sort=-created_at", "description": "Newest users first"},
                {"query": "GET /orders?sort=status,-total", "description": "Sort by status ASC, then total DESC"},
                {"query": "GET /posts?sort=-author.name", "description": "Sort by author name descending"}
            ],
            "isEnabled": true,
            "isSystem": true
        },
        {
            "topic": "pagination",
            "category": "syntax",
            "summary": "Use limit and offset for pagination",
            "content": {
                "parameters": [
                    {"name": "limit", "description": "Max records to return", "example": "limit=10"},
                    {"name": "offset", "description": "Records to skip", "example": "offset=20"}
                ],
                "calculation": "Page 3 with 10 per page: offset=(3-1)*10=20, limit=10"
            },
            "examples": [
                {"query": "GET /users?limit=10", "description": "First 10 users"},
                {"query": "GET /users?limit=10&offset=20", "description": "Page 3 (records 21-30)"},
                {"query": "GET /orders?limit=50&sort=-created_at", "description": "50 newest orders"}
            ],
            "isEnabled": true,
            "isSystem": true
        }
    ]
}



